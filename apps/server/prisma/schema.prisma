generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  isGoogleVerified Boolean @default(false)
  googleId         String?
  profilePicture   String?

  apiKeys        ApiKey[]
  templates      Template[]
  emails         Email[]
  ScheduledEmail ScheduledEmail[]
}

model ApiKey {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  value String @unique
  usage Int    @default(0) // ðŸ‘‰ to keep track of how much a user has used an API key

  createdBy   User   @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Template {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  subject    String // ðŸ‘‰ will be used as subject for email
  content    String
  templateId String  @unique
  isDefault  Boolean @default(false)

  createdBy   User   @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String @db.ObjectId

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  ScheduledEmail ScheduledEmail[]
}

model Email {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  from        String // ðŸ‘‰ sender of mail
  to          String // ðŸ‘‰ receiver of mail
  data        Json // ðŸ‘‰ data sent by user
  content     String
  createdBy   User     @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ScheduledEmailType {
  FIXED_TIME
}

model ScheduledEmail {
  id            String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  to            String[]
  type          ScheduledEmailType
  scheduledTime String
  title         String
  description   String?

  template    Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId  String   @db.ObjectId
  createdBy   User     @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String   @db.ObjectId
}
